# Generated by Django 3.1.7 on 2021-07-15 19:20

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyBaseUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('Phone_Number', models.CharField(max_length=15, null=True)),
                ('address', models.TextField(null=True)),
                ('date_of_birth', models.DateField(null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Examination',
            fields=[
                ('visit_id', models.AutoField(primary_key=True, serialize=False)),
                ('blood_pressure', models.CharField(blank=True, max_length=10, null=True)),
                ('SpO2', models.DecimalField(decimal_places=2, max_digits=5)),
                ('temperature', models.DecimalField(decimal_places=2, max_digits=5)),
                ('pulse_rate', models.CharField(blank=True, max_length=10, null=True)),
                ('general', models.TextField()),
                ('respiratory', models.TextField()),
                ('cardiovascular', models.TextField()),
                ('cereberovascular', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='GynecHistory',
            fields=[
                ('visit_id', models.AutoField(primary_key=True, serialize=False)),
                ('gplad', models.CharField(blank=True, max_length=10, null=True)),
                ('edd', models.DateField(blank=True, null=True)),
                ('lmp', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PastHistory',
            fields=[
                ('visit_id', models.AutoField(primary_key=True, serialize=False)),
                ('surgeries', models.TextField()),
                ('allergies', models.TextField()),
                ('general', models.TextField()),
                ('t2dm', models.BooleanField()),
                ('heart_disease', models.BooleanField()),
                ('hypothyroidism', models.BooleanField()),
                ('chronic_kidney_disease', models.BooleanField()),
                ('cardiovascular_disease', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('mybaseuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='emrsystem.mybaseuser')),
                ('DOJ', models.DateField(auto_now_add=True)),
                ('Unit', models.CharField(blank=True, choices=[('', ''), ('01', '01'), ('02', '02')], max_length=2)),
                ('Department', models.CharField(blank=True, choices=[('', ''), ('rd', 'Radiology'), ('cd', 'Cardiology'), ('dm', 'Dermatology'), ('gl', 'Gastroentrology'), ('sg', 'Surgery'), ('og', 'Obstetrics & Gynecology'), ('hm', 'Haematology'), ('ic', 'Intensice Care Unit'), ('ot', 'Otolaryngology'), ('pt', 'Physiotherapy')], max_length=2, null=True)),
                ('Role', models.CharField(blank=True, choices=[('', ''), ('in', 'Intern'), ('jr', 'Junior Resident'), ('sr', 'Senior Resident'), ('ap', 'Associate Professor'), ('as', 'Assistant Professor'), ('pf', 'Professor'), ('hd', 'Head of Department (HOD)')], max_length=2, null=True)),
            ],
            options={
                'verbose_name': 'doctor',
                'verbose_name_plural': 'doctors',
            },
            bases=('emrsystem.mybaseuser',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('mybaseuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='emrsystem.mybaseuser')),
                ('age', models.IntegerField(null=True)),
                ('fathers_name', models.CharField(max_length=50, null=True, verbose_name="Father's Name")),
                ('mothers_name', models.CharField(max_length=50, null=True, verbose_name="Mother's Name")),
                ('occupation', models.CharField(max_length=55, null=True)),
                ('patient_type', models.CharField(blank=True, choices=[('', ''), ('ipd', 'In-Patient Department'), ('opd', 'Out-Patient Department')], max_length=3, null=True)),
                ('sex', models.CharField(blank=True, choices=[('', ''), ('m', 'Male'), ('f', 'Female'), ('o', 'Other')], max_length=1, null=True)),
            ],
            options={
                'verbose_name': 'patient',
                'verbose_name_plural': 'patients',
            },
            bases=('emrsystem.mybaseuser',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Visit',
            fields=[
                ('visit_number', models.IntegerField(primary_key=True, serialize=False)),
                ('date', models.DateField(auto_now_add=True)),
                ('time_of_visit', models.TimeField(auto_now_add=True)),
                ('payment', models.DecimalField(decimal_places=2, max_digits=20)),
                ('Unit', models.CharField(blank=True, choices=[('', ''), ('01', '01'), ('02', '02')], max_length=2)),
                ('PatientID', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='emrsystem.patient')),
                ('assigned_doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='emrsystem.doctor')),
            ],
        ),
        migrations.AddConstraint(
            model_name='visit',
            constraint=models.UniqueConstraint(fields=('PatientID', 'visit_number'), name='id'),
        ),
    ]
